name: Fetch JSON Data and Push to Artsdata

on:
  workflow_dispatch:
    inputs:
      sources:
        description: 'A comma-separated string of sources to fetch data from'
        required: true
        type: string
  workflow_call:
    inputs:
      sources:
        required: true
        type: string
        description: 'A comma-separated string of sources to fetch data from'
    secrets:
      PUBLISHER_URI_GREGORY:
        required: true

jobs:

  fetch-data-using-python:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: run python
        run: |
          IFS=',' read -ra SOURCES <<< "${{ inputs.sources }}"
          for source in "${SOURCES[@]}"; do
            SOURCE=$source python3 main.py
          done

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-json-files
          path: json_data/

  process-using-ontorefine:
    runs-on: ubuntu-latest
    needs: fetch-data-using-python
    container:
      image: ontotext/refine:1.2.1
      options: --user root
      ports:
        - 7333:7333
    outputs:
      matrix: ${{ steps.process-urls.outputs.matrix }}
    steps:
      - name: Install requirements
        run: apk update && apk add curl && apk add util-linux && apk add jq

      - name: Run ontorefine server
        run: /opt/ontorefine/dist/bin/ontorefine &

      - name: Download project-configuration-file
        id: step-4
        run: | 
          curl 'https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/ontorefine/configuration.json' >> project-config.json
          curl 'https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/ontorefine/columns.json' >> columns.json

      - name: Transform configurations to include column additions 
        shell: bash
        run: |
          config_file="project-config.json"
          column_file="columns.json"
          tmp_file=$(mktemp)

          jq '.operations |= (input + .)' "$config_file" "$column_file" > "$tmp_file"
          mv "$tmp_file" "$config_file"

      - name: download artifacts
        uses: actions/download-artifact@v4
        id: download-step
        with:
          name: all-json-files
          path: json_data/

      - name: transform data
        id: process-urls
        shell: bash
        run: |
            mkdir -p outputs
            matrix="[]"
            input_sources="${{ inputs.sources }}"
            input_sources_cleaned="${input_sources//[[:space:]]/}"
            IFS=',' read -ra SOURCES <<< "$input_sources_cleaned"
            for source in "${SOURCES[@]}"; do
              ttl_file_name="spektrix-${source}-entities.ttl"
              artifact_name="spektrix-${source}"
              json_object="{\"file_name\": \"${ttl_file_name}\", \"artifact\": \"${artifact_name}\"}"

              if [ "$matrix" == "[]" ]; then
                matrix="[${json_object}]"
              else
                matrix=$(echo $matrix | sed "s/]$/,$json_object]/")
              fi

              /opt/ontorefine/dist/bin/ontorefine-cli \
              transform json_data/${source}.json \
              -u http://localhost:7333 \
              --configurations project-config.json \
              -f json >> outputs/spektrix-$source-entities.ttl || echo "Error processing source: ${source}"
            done
            formatted_matrix=$(echo "$matrix" | sed 's/^\[/{ "include": [/; s/]$/]}/')
            echo "matrix=$formatted_matrix" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-ttl-files
          path: outputs/

  commit-and-push:
    runs-on: ubuntu-latest
    needs: process-using-ontorefine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        id: download-step
        uses: actions/download-artifact@v4
        with:
          name: all-ttl-files
          path: outputs/

      - name: Commit files to GitHub
        run: |
          git pull
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add "outputs/"
          git commit -m "Push Entities"
          git push

  artsdata-push:
    runs-on: ubuntu-latest
    needs: [process-using-ontorefine, commit-and-push]
    strategy:
      matrix: ${{fromJson(needs.process-using-ontorefine.outputs.matrix)}}
    steps:
      - name: Action setup
        uses: culturecreates/artsdata-pipeline-action@v1.1.0
        with:
          artifact: ${{ matrix.artifact }}
          publisher: ${{ secrets.PUBLISHER_URI_GREGORY }}
          downloadUrl: https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/outputs/${{ matrix.file_name }}
