name: Fetch JSON Data and Push to Artsdata

on:
  workflow_call:
    inputs:
      api-url:
        required: true
        type: string
        description: 'The URL of the API to fetch data from'
    secrets:
      publisher-uri:
        required: true

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    container:
      image: ontotext/refine:1.2.1
      options: --user root
      ports:
        - 7333:7333
    outputs:
      ttl_file_name: ${{ steps.extract-file-name.outputs.ttl_file_name }}
      artifact_name: ${{ steps.extract-file-name.outputs.artifact_name }}

    steps:
      - name: Install requirements
        run: apk update && apk add curl && apk add util-linux

      - name: Run ontorefine server
        run: /opt/ontorefine/dist/bin/ontorefine &

      - name: Download data from the API
        run: |
          curl '${{ inputs.api-url }}' >> entities.json

      - name: Download project-configuration-file
        id: step-4
        run: | 
          curl 'https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/ontorefine/configuration.json' >> project-config.json

      - name: Extract file name and artifact name from URL
        id: extract-file-name
        run: |
          api_url="${{ inputs.api-url }}"
          api_name=$(echo "${api_url}" | awk -F/ '{print $(NF-3)}')
          echo "ttl_file_name=spektrix-${api_name}-entities.ttl" >> $GITHUB_OUTPUT
          echo "artifact_name=spektrix-${api_name}" >> $GITHUB_OUTPUT

      - name: Transform json data to RDF
        run: |
          /opt/ontorefine/dist/bin/ontorefine-cli \
          transform entities.json \
          -u http://localhost:7333 \
          --configurations project-config.json \
          -f json >> ${{ steps.extract-file-name.outputs.ttl_file_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.extract-file-name.outputs.artifact_name }}
          path: "./${{ steps.extract-file-name.outputs.ttl_file_name }}"
          retention-days: 1

  commit-and-push:
    runs-on: ubuntu-latest
    needs: fetch-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        id: download-step
        uses: actions/download-artifact@v4
        with:
          name: ${{needs.fetch-data.outputs.artifact_name}}
          path: ./${{ needs.fetch-data.outputs.ttl_file_name }}

      - name: Copy files
        run: |
          mkdir -p outputs
          cp "${{ steps.download-step.outputs.download-path }}/${{ needs.fetch-data.outputs.ttl_file_name }}" ./outputs/"${{ needs.fetch-data.outputs.ttl_file_name }}"

      - name: Commit file to GitHub
        run: |
            git pull
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git add "outputs/${{ needs.fetch-data.outputs.ttl_file_name }}"
            git commit -m "Push Entities"
            git push

  artsdata-push:
    runs-on: ubuntu-latest
    needs: [commit-and-push, fetch-data]
    steps:
    - name: Action setup
      uses: culturecreates/artsdata-pipeline-action@v1.1.0
      with:
        artifact: ${{ needs.fetch-data.outputs.artifact_name }}
        publisher: ${{ secrets.publisher-uri }}
        downloadUrl: https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/outputs/${{ needs.fetch-data.outputs.ttl_file_name }}
