name: Fetch JSON Data and Push to Artsdata

on:
  workflow_call:
    inputs:
      api-urls:
        required: true
        type: string
        description: 'A comma-separated string of API URLs to fetch data from'
    secrets:
      publisher-uri:
        required: true

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    container:
      image: ontotext/refine:1.2.1
      options: --user root
      ports:
        - 7333:7333
    outputs:
      matrix: ${{ steps.process-urls.outputs.matrix }}

    steps:
      - name: Install requirements
        run: apk update && apk add curl && apk add util-linux

      - name: Run ontorefine server
        run: /opt/ontorefine/dist/bin/ontorefine &

      - name: Download project-configuration-file
        id: step-4
        run: | 
          curl 'https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/ontorefine/configuration.json' >> project-config.json

      - name: Process URLs
        id: process-urls
        shell: bash
        run: |
          mkdir -p outputs
          matrix="[]"
          IFS=',' read -ra URLS <<< "${{ inputs.api-urls }}"
          for api_url in "${URLS[@]}"; do
            curl "$api_url" > entities.json
            api_name=$(echo "$api_url" | awk -F/ '{print $(NF-3)}')
            ttl_file_name="spektrix-${api_name}-entities.ttl"
            artifact_name="spektrix-${api_name}"

            json_object="{\"file_name\": \"${ttl_file_name}\", \"artifact\": \"${artifact_name}\"}"

            if [ "$matrix" == "[]" ]; then
              matrix="[${json_object}]"
            else
              matrix=$(echo $matrix | sed "s/]$/,$json_object]/")
            fi

            /opt/ontorefine/dist/bin/ontorefine-cli \
            transform entities.json \
            -u http://localhost:7333 \
            --configurations project-config.json \
            -f json >> outputs/$ttl_file_name

          done
          formatted_matrix=$(echo "$matrix" | sed 's/^\[/{ "include": [/; s/]$/]}/')
          echo "matrix=$formatted_matrix" >> $GITHUB_OUTPUT
      
      - name: Print TTL file names
        run: |
          echo ${{ steps.process-urls.outputs.matrix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-ttl-files
          path: outputs/

  commit-and-push:
    runs-on: ubuntu-latest
    needs: fetch-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        id: download-step
        uses: actions/download-artifact@v4
        with:
          name: all-ttl-files
          path: outputs/

      - name: Commit files to GitHub
        run: |
          git pull
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add "outputs/"
          git commit -m "Push Entities"
          git push

  artsdata-push:
    runs-on: ubuntu-latest
    needs: [fetch-data, commit-and-push]
    strategy:
      matrix: ${{fromJson(needs.fetch-data.outputs.matrix)}}
    steps:
      - name: Action setup
        uses: culturecreates/artsdata-pipeline-action@v1.1.0
        with:
          artifact: ${{ matrix.artifact }}
          publisher: ${{ secrets.publisher-uri }}
          downloadUrl: https://raw.githubusercontent.com/culturecreates/artsdata-planet-spektrix/main/outputs/${{ matrix.file_name }}
